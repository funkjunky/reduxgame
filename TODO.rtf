{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 game todo:\
\'97\
\
 *- turn the ship into a polygon sorta like geometry wars [hex with square at front]\
	*- origin centre\
 *- add mouse for rotation of ship\
	*- add rotation variables, but don\'92t put in drawing yet\
	*- put rotate in drawing.\
 *- put friction and terminal in state.world.physics\
 *- add shooting bullets with left mouse click [little circles]\
	*- bullets are entities, bullets have their own friction of zero\
 *- add infinite level\
 *- bullet speed should be normalized\
 *- add generating random asteroids [polygons]\
	*- rotate the asteroids slowly, random speed and direction.\
 *- add a margin to left and right, so things don\'92t instantly rotate. Perhaps 20 pixels.\
\
 *- add a tagging system or something to grab entities by\'85 so we can use that for controls\'85\
\
 - add collision with bullets and asteroids so they make smaller asteroids that will NOT split after being hit\
	*- onCollision: \{tags: action:\} [add comments on other entity]\
	*- check collision function, line intersection checks against all lines and fires action\
	*- copy line intersection code from SO, then just put the points in ourselves manually.\
	*- make the reducer for destroy_entity\
	*- troubleshoot detection code\'85 it seems onCollision.find doesn\'92t exist\'85 so see what is being returned by crossFilter\
	*- Convert all collision detection to circles. ships and asteroids well use size and pretend to be a circle\
	*- put back in asteroid code\
\
 - simplify reducer structure\
	*- no more draw\
	*- size goes in root\
	*- we draw from tags, first we see.\
	*- for asteroids we pre-determine like 10 asteroids and index them. An asteroid gets a random tag \'91asteroid-shape-0\'92 to determine it\'92s shape of lines.	\
\
 *- make the code for creating asteroid_peice, 4 of them at the 4 squares around the area.\
 *- add score to destroying asteroids [1 point for big ones, 2 points for small ones]\
 *- mouse is off, probably because of clientX/Y and the headers\
 *- asteroid interval should use update and DT, so pause works with it\
 *- add collision with ship for asteroid and bullet, reset all states, stop update interval, count down 5 seconds, start update interval\
 *- grab ship for bullets through tags, not 0 index\
 *- asteroid countdown should be in redux store\
\
 *- put entity templates in their own files, in their own directory\
 - put update and draw loop into reducers\
	*- create the reducers\
	*- remove old update and draw interval code, while ensuring it\'92s all transfered\
	*- do the same for asteroid spawns\
		*- write a middleware for queueing up actions to be dispatched after.\
\
	*- middleware for steps and interval\
		*- create middleware that takes interval argument\
		*- inside, create setInterval, and dispatches the action \'91_tick\'92 every interval with action.dt set\
		*- add play pause\
\
	*- updating input\
		*- remove exclusives\
		*- cleaned up\
\
	- reorganize acc, vel, and pos all hierarchical under acceleration. \
		*- put reducers in each other heirarhically\
			*- acceelration -> velocity -> position\
			*- rotationalvelocity -> rotation\
		*- wrap the combine reducers in a way where we add the get properties for velocity and position in entity. and set properties through acceleration\
		*- clean up excess code and rename things better\'85\
		*- figure out a nicer way to do all the boilerplate for these new reducer methods.\
\
	*- handle tick for other things\'85\
	*- use new action queue middleware for game logic actions in reducers.\
	*- move collision code, into library code and asteredux code\
	*- move all other code into asteredux code as necessary\
\
	*- all files should be clean\
\
	 *- put action types into a types constant file and actions into /actions/\
		*- put actions into action files\
		*- pass QueueAction to onCollision callback\
		*- put action type names into constants\
\
 *- test code till it works\
	*- why am i getting unknown types when moving mouse? [init everytime\'85 moved combineReducer out of call]\
 	*- position is being reset as soon as i move the mouse, and I know it isn\'92t being set through the property. SO must be position\
 	*- friction, terminal need to be put into velocity, then I need to set them \
	*- friction isn\'92tbeing applied to bullets\
	*- keys aren\'92t working properly.\
	*- pause doesn\'92t work\
	*- asteroids aren\'92t spawning\
	*- asteroids arent drifting\
	*- aim for bullets is off\
	*- collisions\
	*- mini asteroids are huge and not near location\
	*- reset doesnt reset asteroids\
	*- mini asteroids spawn more miniasteroids\
\
 - handle ALL TODOs\
 - Try hard to simplify things\'85\
 - add a few tests\
\
 - publish a gh-page demo of game\
\
\'85\
\
 - there should be no helpers, move everything into libraries I import through NPM\
 - separate the engine and the game, make publish the engine as a library we include\
\
 - new gameplay\
	- add a portal oval entity\
	- bullets now freeze asteroid movement [bullets yellow]\
	- when entering portal change state\
		- ship is now blue\
		- background is patches of varying grey [rectangles]\
		- so asteroids can be destroyed\
		- asteroids don\'92t destroy the ship [can still see white asteroids, but 70% alpha]\
		- large walls start coming in at an ever increasing rate across the map [blue]\
		- hold right click to phase back into the real world to avoid walls [walls 70% alpha]\
			- also background normal while phasing back in. [and asteroids 100% alpha]\
			- a rectangle inside the ship indicates how much phase is left [white]\
			- when phase runs out, you are returned to the real world and the alternate world is reset.}